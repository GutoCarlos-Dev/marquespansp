// js/migrate.js - Script para migrar dados do localStorage para SupaBase

// Fun√ß√£o para gerar SQL INSERT para usu√°rios
function gerarSQLUsuarios() {
    try {
        const usuarios = JSON.parse(localStorage.getItem('usuarios')) || [];

        if (usuarios.length === 0) {
            console.log('‚ùå Nenhum usu√°rio encontrado no localStorage.');
            console.log('üí° Certifique-se de que voc√™ tem usu√°rios cadastrados localmente.');
            return false;
        }

        console.log('‚úÖ Encontrados', usuarios.length, 'usu√°rios no localStorage');
        console.log('');
        console.log('=== SCRIPT SQL PARA SUPABASE ===');
        console.log('');
        console.log('-- Criar tabela usuarios');
        console.log('CREATE TABLE IF NOT EXISTS usuarios (');
        console.log('    id BIGINT PRIMARY KEY,');
        console.log('    nome TEXT NOT NULL,');
        console.log('    email TEXT UNIQUE NOT NULL,');
        console.log('    senha TEXT NOT NULL,');
        console.log('    nivel TEXT NOT NULL');
        console.log(');');
        console.log('');

        console.log('-- Inserir usu√°rios');
        usuarios.forEach((usuario, index) => {
            try {
                const nome = usuario.nome ? usuario.nome.replace(/'/g, "''") : '';
                const email = usuario.email ? usuario.email.replace(/'/g, "''") : '';
                const senha = usuario.senha ? usuario.senha.replace(/'/g, "''") : '';
                const nivel = usuario.nivel || 'tecnico';

                const sql = `INSERT INTO usuarios (id, nome, email, senha, nivel) VALUES (${usuario.id}, '${nome}', '${email}', '${senha}', '${nivel}');`;
                console.log(sql);
            } catch (error) {
                console.error(`‚ùå Erro ao processar usu√°rio ${index + 1}:`, error);
            }
        });

        console.log('');
        console.log('-- Verificar inser√ß√£o');
        console.log('SELECT * FROM usuarios;');
        console.log('');
        console.log('=== FIM DO SCRIPT ===');
        return true;
    } catch (error) {
        console.error('‚ùå Erro ao gerar SQL de usu√°rios:', error);
        return false;
    }
}

// Fun√ß√£o para gerar SQL para outras tabelas (se necess√°rio)
function gerarSQLSolicitacoes() {
    try {
        const solicitacoes = JSON.parse(localStorage.getItem('solicitacoes')) || [];

        if (solicitacoes.length === 0) {
            console.log('‚ÑπÔ∏è Nenhuma solicita√ß√£o encontrada no localStorage.');
            return true;
        }

        console.log('');
        console.log('-- Criar tabela solicitacoes (exemplo)');
        console.log('CREATE TABLE IF NOT EXISTS solicitacoes (');
        console.log('    id BIGINT PRIMARY KEY,');
        console.log('    dados JSONB');
        console.log(');');
        console.log('');

        console.log('-- Inserir solicita√ß√µes');
        solicitacoes.forEach(solicitacao => {
            try {
                const sql = `INSERT INTO solicitacoes (id, dados) VALUES (${solicitacao.id || Date.now()}, '${JSON.stringify(solicitacao).replace(/'/g, "''")}');`;
                console.log(sql);
            } catch (error) {
                console.error('‚ùå Erro ao processar solicita√ß√£o:', error);
            }
        });
        return true;
    } catch (error) {
        console.error('‚ùå Erro ao gerar SQL de solicita√ß√µes:', error);
        return false;
    }
}

// Fun√ß√£o principal de migra√ß√£o
function executarMigracao() {
    console.log('üöÄ Iniciando migra√ß√£o de dados do localStorage para SupaBase...');
    console.log('');

    let sucesso = true;

    // Verificar se localStorage est√° dispon√≠vel
    if (typeof localStorage === 'undefined') {
        console.error('‚ùå localStorage n√£o est√° dispon√≠vel neste navegador.');
        return false;
    }

    // Executar migra√ß√£o de usu√°rios
    const usuariosOK = gerarSQLUsuarios();
    if (!usuariosOK) {
        sucesso = false;
    }

    // Executar migra√ß√£o de solicita√ß√µes
    const solicitacoesOK = gerarSQLSolicitacoes();
    if (!solicitacoesOK) {
        sucesso = false;
    }

    // Instru√ß√µes finais
    console.log('');
    if (sucesso) {
        console.log('‚úÖ Migra√ß√£o conclu√≠da com sucesso!');
        console.log('');
        console.log('=== PR√ìXIMOS PASSOS ===');
        console.log('1. üìã Copie todo o script SQL mostrado acima');
        console.log('2. üåê V√° para https://supabase.com e fa√ßa login');
        console.log('3. üìÅ Crie um novo projeto ou acesse um existente');
        console.log('4. üõ†Ô∏è V√° para "SQL Editor" no painel lateral');
        console.log('5. üìù Cole o script SQL e clique em "Run"');
        console.log('6. ‚úÖ Verifique se os dados foram inseridos corretamente');
        console.log('7. üîë V√° para "Settings > API" para obter URL e chave');
        console.log('8. üìù Atualize o arquivo js/config.js com suas credenciais');
        console.log('========================');
    } else {
        console.log('‚ùå Migra√ß√£o conclu√≠da com erros. Verifique as mensagens acima.');
    }

    return sucesso;
}

// Executar migra√ß√£o automaticamente quando o script for carregado
if (typeof window !== 'undefined') {
    // Aguardar um pouco para garantir que a p√°gina esteja carregada
    setTimeout(() => {
        executarMigracao();
    }, 100);
}

// Tamb√©m exportar a fun√ß√£o para uso manual
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { executarMigracao, gerarSQLUsuarios, gerarSQLSolicitacoes };
}
